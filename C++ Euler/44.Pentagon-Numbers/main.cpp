#include <iostream>
#include <cmath>
using namespace std; 

/*
44. Pentagon Numbers
	pentagonal numbers are generated by the formula Pn = n(3n - 1) / 2
	the first ten pentagonal numbers are 1, 5, 12, 22, 35, 51, 70, 92, 117, 145...
	it can be seen that P4 + P7 = 22 + 70 = 92 = P8, however their difference
	70 - 22 = 48 is not pentagonal
	Find the pair of pentagonal numbers Pj and Pk for which their sum and difference
	are pentagonal and D = |Pk - Pj| is minimised, what is the value of D?
*/

int pentagonal(int n) {
	return n * (3 * n - 1) / 2;
}

bool isPentagonal(int n) {
	double p = (sqrt(24 * n + 1) + 1) / 6;
	if (p == (unsigned int)(p))
		return true;
	return false;
}

int main() {
	for (int i {1}; ; i++) {
		long sum = pentagonal(i);
		for (int u {1}; u < i; u++) {
			long diff = pentagonal(u);
			if (isPentagonal((sum + diff) / 2) && isPentagonal((sum - diff) / 2)) {
				cout << diff << "\n";
				return 0;
			}
		}
	}
}